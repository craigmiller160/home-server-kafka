apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kafka_ui.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.kafka_ui.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.kafka_ui.name }}
    spec:
      initContainers:
        - name: {{ .Values.kafka_ui.name }}-setup
          image: busybox:1.35.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              cp /etc/dynamic_config_raw/dynamic_config.yaml /etc/kafkaui &&
              cp /etc/certs/truststore.p12 /etc/kafkaui/kafka.truststore.jks &&
              sed -i "s/\$SUPER_USER/${KAFKA_SUPER_USER_NAME}/g" /etc/kafkaui/dynamic_config.yaml &&
              sed -i "s/\$SUPER_PASSWORD/${KAFKA_SUPER_USER_PASSWORD}/g" /etc/kafkaui/dynamic_config.yaml &&
              chmod 666 /etc/kafkaui/dynamic_config.yaml
          env:
            - name: KAFKA_SUPER_USER_NAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.kafka.secrets.super_user }}
            - name: KAFKA_SUPER_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.kafka.secrets.super_user }}
          volumeMounts:
            - mountPath: /etc/kafkaui
              name: {{ .Values.kafka_ui.volumes.config }}
            - mountPath: /etc/dynamic_config_raw
              name: {{ .Values.kafka_ui.volumes.dynamic_config_raw }}
            - mountPath: /etc/certs
              name: {{ .Values.kafka.volumes.certs }}
      containers:
        - name: {{ .Values.kafka_ui.name }}
          image: "provectuslabs/kafka-ui:{{ .Values.kafka_ui.version }}"
          ports:
            - containerPort: {{ .Values.kafka_ui.networking.internal_port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.kafka_ui.configmap.primary }}
          volumeMounts:
            - mountPath: /etc/kafkaui
              name:  {{ .Values.kafka_ui.volumes.config }}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 10
            httpGet:
              port: 8080
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
            httpGet:
              port: 8080
      volumes:
        - name: {{ .Values.kafka_ui.volumes.dynamic_config_raw }}
          configMap:
            name: {{ .Values.kafka_ui.configmap.dynamic_config }}
        - name: {{ .Values.kafka.volumes.certs }}
          secret:
            secretName: {{ .Values.kafka.secrets.certificate }}
        - name: {{ .Values.kafka_ui.volumes.config }}
          emptyDir: {}